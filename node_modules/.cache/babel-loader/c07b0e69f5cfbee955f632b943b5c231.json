{"ast":null,"code":"var _jsxFileName = \"/home/aun/Projects/tutor-website/src/pages/Video/detail/videoDetail.js\";\nimport React from 'react';\nimport './style.scss';\nimport { Helmet } from \"react-helmet\";\nimport Navigation from \"../../../components/navigation/navigation\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../../../components/footer/footer\";\nimport environment from \"../../../environment\";\nimport { QueryRenderer } from \"react-relay\";\nimport ScrollToTopOnMount from \"../../../components/ScrollToTopOnMount\";\nimport { Translation } from \"react-i18next\";\nimport MasterComponent from \"../../../components/master\";\n\nconst query = function () {\n  const node = require(\"./__generated__/videoDetailQuery.graphql\");\n\n  if (node.hash && node.hash !== \"e58c7424ddd6cf54fdc4bd2c9cc1b575\") {\n    console.error(\"The definition of 'videoDetailQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/videoDetailQuery.graphql\");\n};\n\nconst videoDetail = ({\n  error,\n  props\n}) => {\n  if (error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, error.message);\n  } else if (props) {\n    return props.detail.allTutorialVideo.edges.map(video => React.createElement(Translation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, t => React.createElement(\"div\", {\n      className: \"row\",\n      key: video.node.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, video.node.name), React.createElement(\"meta\", {\n      name: \"description\",\n      content: video.node.metaDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"meta\", {\n      name: \"keywords\",\n      content: video.node.metaKeyword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-8 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"embed-responsive embed-responsive-16by9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      title: \"Silverman video tutorial\",\n      className: \"embed-responsive-item\",\n      src: \"https://www.youtube.com/embed/\" + video.node.youtubeId,\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-4 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"type mt-4 mt-md-0 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, t(\"video:SILVERMAN Academy\")), \"/ \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, video.node.category.name)), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, video.node.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, video.node.text))))));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Loading ...\");\n}; // const groupVideo = ({error, props}) => {\n//     if (error) {\n//         return <div>{error.message}</div>;\n//     } else if (props) {\n//         return (\n//             props.groupVideo.allTutorialVideo.edges.map((group_video) => (\n//                 <div className=\"group-video\" key={group_video.node.id}>\n//                     <Link to={\"/video/detail/\"+ group_video.node.category.slug + \"/\" + group_video.node.id}>\n//                         <div className=\"video\">\n//                             <img src={group_video.node.thumbnail}\n//                                  alt={group_video.node.thumbnail} className=\"img-fluid\"/>\n//                             <h6>{group_video.node.name}</h6>\n//                             {/*<div className=\"time\">*/}\n//                             {/*    <img*/}\n//                             {/*        src={process.env.PUBLIC_URL + '/assets/images/video/clock-gray.png'}*/}\n//                             {/*        alt=\"clock\"/>*/}\n//                             {/*    <p>42 นาที</p>*/}\n//                             {/*</div>*/}\n//                         </div>\n//                     </Link>\n//                 </div>\n//             ))\n//         )\n//     }\n//     return <div className=\"text-center\">Loading ...</div>;\n// };\n\n\nclass VideoDetail extends MasterComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id,\n      category: props.match.params.category\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(ScrollToTopOnMount, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video-detail mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(QueryRenderer, {\n      environment: environment,\n      query: query,\n      variables: {\n        id: this.state.id\n      },\n      render: videoDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default VideoDetail;","map":{"version":3,"sources":["/home/aun/Projects/tutor-website/src/pages/Video/detail/videoDetail.js"],"names":["React","Helmet","Navigation","Link","Footer","environment","QueryRenderer","ScrollToTopOnMount","Translation","MasterComponent","query","videoDetail","error","props","message","detail","allTutorialVideo","edges","map","video","t","node","id","name","metaDescription","metaKeyword","youtubeId","category","text","VideoDetail","constructor","state","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.scss';\nimport {Helmet} from \"react-helmet\";\nimport Navigation from \"../../../components/navigation/navigation\";\nimport {Link} from \"react-router-dom\";\nimport Footer from \"../../../components/footer/footer\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport environment from \"../../../environment\";\nimport {QueryRenderer} from \"react-relay\";\nimport ScrollToTopOnMount from \"../../../components/ScrollToTopOnMount\";\nimport {Translation} from \"react-i18next\";\nimport MasterComponent from \"../../../components/master\";\n\nconst query = graphql`\n    query videoDetailQuery($id: ID, $category: String) {\n        detail: tutorialVideoViewer {\n            allTutorialVideo (id: $id) {\n                edges {\n                    node {\n                        id name text youtubeId metaDescription metaKeyword\n                        category {\n                            id name slug\n                        }\n                    }\n                }\n            }\n        }\n\n        groupVideo: tutorialVideoViewer {\n            allTutorialVideo (category: $category, first: 4){\n                edges {\n                    node {\n                        id name thumbnail\n                        category {\n                            id name slug\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst videoDetail = ({error, props}) => {\n    if (error) {\n        return <div>{error.message}</div>;\n    } else if (props) {\n        return (\n            props.detail.allTutorialVideo.edges.map((video) => (\n                <Translation>\n                    {(t) => (\n                        <div className=\"row\" key={video.node.id}>\n                            <Helmet>\n                                <title>{video.node.name}</title>\n                                <meta name=\"description\" content={video.node.metaDescription}/>\n                                <meta name=\"keywords\" content={video.node.metaKeyword}/>\n                            </Helmet>\n                            <div className=\"col-md-8 col-12\">\n                                <div className=\"embed-responsive embed-responsive-16by9\">\n                                    <iframe title=\"Silverman video tutorial\"\n                                            className=\"embed-responsive-item\"\n                                            src={\"https://www.youtube.com/embed/\" + video.node.youtubeId}\n                                            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                                            allowFullScreen>\n                                    </iframe>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 col-12\">\n                                <div className=\"description\">\n                                    <p className=\"type mt-4 mt-md-0 mb-0\"><Link\n                                        to={\"/video\"}>{t(\"video:SILVERMAN Academy\")}</Link>\n                                        / <strong>{video.node.category.name}</strong>\n                                    </p>\n                                    <h1>{video.node.name}</h1>\n                                    {/*<div className=\"time\">*/}\n                                    {/*    <img src={process.env.PUBLIC_URL + '/assets/images/video/clock-gray.png'}*/}\n                                    {/*         alt=\"clock\"/>*/}\n                                    {/*    <p>42 นาที</p>*/}\n                                    {/*</div>*/}\n                                    <p>{video.node.text}</p>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </Translation>\n            ))\n        )\n    }\n    return <div className=\"text-center\">Loading ...</div>;\n};\n\n// const groupVideo = ({error, props}) => {\n//     if (error) {\n//         return <div>{error.message}</div>;\n//     } else if (props) {\n//         return (\n//             props.groupVideo.allTutorialVideo.edges.map((group_video) => (\n//                 <div className=\"group-video\" key={group_video.node.id}>\n//                     <Link to={\"/video/detail/\"+ group_video.node.category.slug + \"/\" + group_video.node.id}>\n//                         <div className=\"video\">\n//                             <img src={group_video.node.thumbnail}\n//                                  alt={group_video.node.thumbnail} className=\"img-fluid\"/>\n//                             <h6>{group_video.node.name}</h6>\n//                             {/*<div className=\"time\">*/}\n//                             {/*    <img*/}\n//                             {/*        src={process.env.PUBLIC_URL + '/assets/images/video/clock-gray.png'}*/}\n//                             {/*        alt=\"clock\"/>*/}\n//                             {/*    <p>42 นาที</p>*/}\n//                             {/*</div>*/}\n//                         </div>\n//                     </Link>\n//                 </div>\n//             ))\n//         )\n//     }\n//     return <div className=\"text-center\">Loading ...</div>;\n// };\n\nclass VideoDetail extends MasterComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.match.params.id,\n            category: props.match.params.category,\n        };\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ScrollToTopOnMount/>\n                <Navigation/>\n                <div className=\"video-detail mb-5\">\n                    <div className=\"container\">\n                        <QueryRenderer\n                            environment={environment}\n                            query={query}\n                            variables={{id: this.state.id}}\n                            render={videoDetail}\n                        />\n\n                        {/*<div className=\"row mt-5 mb-5\">*/}\n                        {/*    <div className=\"col-12\">*/}\n                        {/*        <h1 className=\"mb-3 mb-md-0\">วิดีโอที่เกี่ยวข้อง</h1>*/}\n                        {/*        <QueryRenderer*/}\n                        {/*            environment={environment}*/}\n                        {/*            query={query}*/}\n                        {/*            variables={{category: this.state.category}}*/}\n                        {/*            render={groupVideo}*/}\n                        {/*        />*/}\n                        {/*    </div>*/}\n                        {/*</div>*/}\n                    </div>\n                </div>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}
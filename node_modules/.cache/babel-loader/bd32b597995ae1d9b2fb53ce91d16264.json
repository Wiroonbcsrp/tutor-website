{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _require = require('relay-runtime'),\n    getSelector = _require.getSelector;\n\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {}; // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n\n  Object.keys(fragments).forEach(function (key) {\n    var _ref, _selector$selectors$, _ref2;\n\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_ref = (_selector$selectors$ = selector.selectors[0]) === null || _selector$selectors$ === void 0 ? void 0 : _selector$selectors$.owner.variables) !== null && _ref !== void 0 ? _ref : {} : (_ref2 = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _ref2 !== void 0 ? _ref2 : {};\n    rootVariables = (0, _objectSpread2[\"default\"])({}, rootVariables, fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\n\nmodule.exports = getRootVariablesForFragments;","map":null,"metadata":{},"sourceType":"script"}